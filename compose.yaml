services:
  mqtt:
    build:
      context: mqtt-publisher
      dockerfile: Dockerfile
    depends_on:
      postgres:
        condition: service_healthy
      processor:
        condition: service_started
    environment:
      DATABASE_URL: "postgres://inbox:inbox@postgres:5432/inbox"
      MQTT_PASSWORD: ${MOSQUITTO_PASSWORD}
    image: econialabs/inbox:mqtt
    ports:
      - "21883:21883"
      - "21884:21884"
    restart: unless-stopped

  postgres:
    environment:
      POSTGRES_USER: "inbox"
      POSTGRES_DB: "inbox"
      POSTGRES_PASSWORD: "inbox"
    image: postgres:14-bookworm
    restart: always
    volumes:
      - "db:/var/lib/postgresql/data"
    healthcheck:
      test: pg_isready -h localhost -p 5432 -U inbox || exit 1
      interval: 5s
      timeout: 3s
      retries: 3
      start_period: 15s
      start_interval: 5s
    ports:
      - "5432:5432"

  postgrest:
    depends_on:
      postgres:
        condition: service_healthy
    environment:
      PGRST_DB_URI: "postgres://inbox:inbox@postgres:5432/inbox"
      PGRST_DB_ANON_ROLE: web_anon
      PGRST_DB_MAX_ROWS: ${POSTGREST_MAX_ROWS}
    image: postgrest/postgrest
    ports:
      - "3000:3000"
    restart: unless-stopped

  processor:
    extra_hosts:
      - "host.docker.internal:host-gateway"
    build:
      context: .
      dockerfile: processor/rust/Dockerfile
    environment:
      DATABASE_URL: "postgres://inbox:inbox@postgres:5432/inbox"
      CONTRACT_ADDRESS: ${CONTRACT_ADDRESS}
      GRPC_AUTH_TOKEN: ${GRPC_AUTH_TOKEN}
      GRPC_DATA_SERVICE_URL: ${GRPC_DATA_SERVICE_URL}
      STARTING_VERSION: ${STARTING_VERSION}
    depends_on:
      postgres:
        condition: service_healthy
    image: econialabs/inbox:processor
    restart: unless-stopped
    stop_signal: SIGKILL

  sql_extensions:
    build:
      context: .
      dockerfile: sql_extensions/Dockerfile
    environment:
      DATABASE_URL: "postgres://inbox:inbox@postgres:5432/inbox"
    depends_on:
      postgres:
        condition: service_healthy
      processor:
        condition: service_started
    image: econialabs/inbox:sql_extensions
    volumes:
      - ./sql_extensions/migrations/:/migrations
      - ./sql_extensions/sql/:/sql

volumes:
  db:
    driver: local
